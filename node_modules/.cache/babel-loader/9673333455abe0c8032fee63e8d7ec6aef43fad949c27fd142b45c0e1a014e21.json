{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\src\\\\mcq.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { gsap } from \"gsap\";\nimport \"./mcq.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MCQ = () => {\n  _s();\n  const questions = [{\n    question: \"1. An array A consists of n integers in locations A[0], A[1], ... A[n-1]...\",\n    options: [\"Option 1\", \"Option 2\", \"Option 3\", \"Option 4\"],\n    correctAnswer: \"Option 2\"\n  }, {\n    question: \"2. What is the time complexity of binary search in a sorted array?\",\n    options: [\"O(n)\", \"O(log n)\", \"O(n^2)\", \"O(1)\"],\n    correctAnswer: \"O(log n)\"\n  }, {\n    question: \"3. Which data structure is used in a Breadth-First Search (BFS) traversal?\",\n    options: [\"Stack\", \"Queue\", \"Priority Queue\", \"Linked List\"],\n    correctAnswer: \"Queue\"\n  }, {\n    question: \"4. A frame buffer array is addressed in row major order for a monitor...\",\n    options: [\"1016\", \"1006\", \"610\", \"616\"],\n    correctAnswer: \"1016\"\n  }];\n  useEffect(() => {\n    gsap.fromTo(\".mcq-header\", {\n      opacity: 0,\n      y: 50\n    },\n    // Start state\n    {\n      opacity: 1,\n      y: 0,\n      duration: 1\n    } // End state\n    );\n  }, []);\n  const [answeredQuestions, setAnsweredQuestions] = useState([]);\n  const handleOptionClick = (currentQuestion, option) => {\n    const isAnswerCorrect = option === currentQuestion.correctAnswer;\n    setAnsweredQuestions(prev => [...prev.filter(q => q.question !== currentQuestion.question), {\n      question: currentQuestion.question,\n      selectedOption: option,\n      isAnswerCorrect\n    }]);\n  };\n  const handleSmoothScroll = event => {\n    event.preventDefault();\n    const targetId = event.currentTarget.getAttribute(\"href\").slice(1);\n    const targetElement = document.getElementById(targetId);\n    if (targetElement) {\n      targetElement.scrollIntoView({\n        behavior: \"smooth\",\n        block: \"start\"\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mcq-layout\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Questions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: questions.map((_, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: `#question-${index + 1}`,\n            onClick: handleSmoothScroll,\n            children: [\"Question \", index + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mcq-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"mcq-header\",\n        id: \"home\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Test Your Knowledge\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Answer the following questions to challenge your skills! \\uD83C\\uDF89\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), questions.map((currentQuestion, index) => {\n        const answered = answeredQuestions.find(answer => answer.question === currentQuestion.question);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          id: `question-${index + 1}`,\n          className: \"question-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: currentQuestion.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"options-container\",\n            children: currentQuestion.options.map((option, optIndex) => /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `option-btn ${(answered === null || answered === void 0 ? void 0 : answered.selectedOption) === option ? answered.isAnswerCorrect ? \"correct\" : \"incorrect\" : \"\"}`,\n              onClick: () => handleOptionClick(currentQuestion, option),\n              children: [String.fromCharCode(65 + optIndex), \". \", option]\n            }, optIndex, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), (answered === null || answered === void 0 ? void 0 : answered.selectedOption) && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: `feedback ${answered.isAnswerCorrect ? \"correct-feedback\" : \"incorrect-feedback\"}`,\n            children: answered.isAnswerCorrect ? \"Correct! 🎉\" : \"Oops! Try again. ❌\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(MCQ, \"He7Dpk3BxtHJ4Fo0uZTWaniR6rk=\");\n_c = MCQ;\nexport default MCQ;\nvar _c;\n$RefreshReg$(_c, \"MCQ\");","map":{"version":3,"names":["React","useState","useEffect","gsap","jsxDEV","_jsxDEV","MCQ","_s","questions","question","options","correctAnswer","fromTo","opacity","y","duration","answeredQuestions","setAnsweredQuestions","handleOptionClick","currentQuestion","option","isAnswerCorrect","prev","filter","q","selectedOption","handleSmoothScroll","event","preventDefault","targetId","currentTarget","getAttribute","slice","targetElement","document","getElementById","scrollIntoView","behavior","block","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","_","index","href","onClick","id","answered","find","answer","optIndex","String","fromCharCode","_c","$RefreshReg$"],"sources":["C:/project/src/mcq.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { gsap } from \"gsap\";\r\nimport \"./mcq.css\";\r\n\r\nconst MCQ = () => {\r\n  const questions = [\r\n    { \r\n      question: \"1. An array A consists of n integers in locations A[0], A[1], ... A[n-1]...\",\r\n      options: [\"Option 1\", \"Option 2\", \"Option 3\", \"Option 4\"],\r\n      correctAnswer: \"Option 2\" \r\n    },\r\n    { \r\n      question: \"2. What is the time complexity of binary search in a sorted array?\",\r\n      options: [\"O(n)\", \"O(log n)\", \"O(n^2)\", \"O(1)\"],\r\n      correctAnswer: \"O(log n)\" \r\n    },\r\n    { \r\n      question: \"3. Which data structure is used in a Breadth-First Search (BFS) traversal?\",\r\n      options: [\"Stack\", \"Queue\", \"Priority Queue\", \"Linked List\"],\r\n      correctAnswer: \"Queue\" \r\n    },\r\n    { \r\n      question: \"4. A frame buffer array is addressed in row major order for a monitor...\",\r\n      options: [\"1016\", \"1006\", \"610\", \"616\"], \r\n      correctAnswer: \"1016\" \r\n    }\r\n  ];\r\n\r\n  useEffect(() => {\r\n    gsap.fromTo(\r\n      \".mcq-header\",\r\n      { opacity: 0, y: 50 }, // Start state\r\n      { opacity: 1, y: 0, duration: 1 } // End state\r\n    );\r\n  }, []);\r\n\r\n  const [answeredQuestions, setAnsweredQuestions] = useState([]);\r\n  const handleOptionClick = (currentQuestion, option) => {\r\n    const isAnswerCorrect = option === currentQuestion.correctAnswer;\r\n    setAnsweredQuestions((prev) => [\r\n      ...prev.filter((q) => q.question !== currentQuestion.question),\r\n      { question: currentQuestion.question, selectedOption: option, isAnswerCorrect },\r\n    ]);\r\n  };\r\n\r\n  const handleSmoothScroll = (event) => {\r\n    event.preventDefault();\r\n    const targetId = event.currentTarget.getAttribute(\"href\").slice(1);\r\n    const targetElement = document.getElementById(targetId);\r\n    if (targetElement) {\r\n      targetElement.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"mcq-layout\">\r\n      {/* Sidebar */}\r\n      <div className=\"sidebar\">\r\n        <h3>Questions</h3>\r\n        <ul>\r\n          {questions.map((_, index) => (\r\n            <li key={index}>\r\n              <a href={`#question-${index + 1}`} onClick={handleSmoothScroll}>\r\n                Question {index + 1}\r\n              </a>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n\r\n      {/* Main Content */}\r\n      <div className=\"mcq-content\">\r\n        <header className=\"mcq-header\" id=\"home\">\r\n          <h1>Test Your Knowledge</h1>\r\n          <p>Answer the following questions to challenge your skills! 🎉</p>\r\n        </header>\r\n\r\n        {questions.map((currentQuestion, index) => {\r\n          const answered = answeredQuestions.find(\r\n            (answer) => answer.question === currentQuestion.question\r\n          );\r\n\r\n          return (\r\n            <div key={index} id={`question-${index + 1}`} className=\"question-card\">\r\n              <h3>{currentQuestion.question}</h3>\r\n              <div className=\"options-container\">\r\n                {currentQuestion.options.map((option, optIndex) => (\r\n                  <button\r\n                    key={optIndex}\r\n                    className={`option-btn ${\r\n                      answered?.selectedOption === option\r\n                        ? answered.isAnswerCorrect\r\n                          ? \"correct\"\r\n                          : \"incorrect\"\r\n                        : \"\"\r\n                    }`}\r\n                    onClick={() => handleOptionClick(currentQuestion, option)}\r\n                  >\r\n                    {String.fromCharCode(65 + optIndex)}. {option}\r\n                  </button>\r\n                ))}\r\n              </div>\r\n              {answered?.selectedOption && (\r\n                <p\r\n                  className={`feedback ${\r\n                    answered.isAnswerCorrect ? \"correct-feedback\" : \"incorrect-feedback\"\r\n                  }`}\r\n                >\r\n                  {answered.isAnswerCorrect ? \"Correct! 🎉\" : \"Oops! Try again. ❌\"}\r\n                </p>\r\n              )}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MCQ;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}