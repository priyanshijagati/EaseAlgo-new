{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\src\\\\mcq.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./mcq.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MCQ = () => {\n  _s();\n  const questions = [{\n    question: \"1. An array A consists of n integers in locations A[0], A[1], ... A[n-1]. It is required to shift the elements of the array cyclically to the left by k places, where 1 ≤ k ≤ (n - 1). An incomplete algorithm for doing this in linear time, without using another array is given below. Complete the algorithm by filling in the blanks.\",\n    options: [\"i > min; j != (n + i) mod n; A[j + k] = temp; i + 1;\", \"i < min; j != (n + i - k) mod n; A[(j + k) mod n] = temp; i + 1;\", \"i < min; j != (n + i + k) mod n; A[j + k] = temp; i + 1;\", \"i > min; j != (n + i + k) mod n; A[(j + k) mod n] = temp; i + 1;\"],\n    correctAnswer: \"i < min; j != (n + i - k) mod n; A[(j + k) mod n] = temp; i + 1;\"\n  }, {\n    question: \"2. What is the time complexity of binary search in a sorted array?\",\n    options: [\"O(n)\", \"O(log n)\", \"O(n^2)\", \"O(1)\"],\n    correctAnswer: \"O(log n)\"\n  }\n  // Additional questions...\n  ];\n  const tipsAndTricks = [\"Revise key topics like Data Structures, Algorithms, and Mathematics daily.\", \"Solve previous years' GATE question papers to get a sense of the exam pattern.\", \"Time yourself while solving questions to improve speed and accuracy.\"];\n  const formulaRecap = [\"Time Complexity of Binary Search: O(log n)\", \"Cyclic Array Rotation Formula: New Index = (i + k) % n\", \"Area of a Circle: πr²\"];\n  const highlightMCQ = {\n    question: \"What is the space complexity of DFS using an adjacency list?\",\n    options: [\"O(V)\", \"O(E)\", \"O(V + E)\", \"O(1)\"],\n    correctAnswer: \"O(V)\"\n  };\n  const [answeredQuestions, setAnsweredQuestions] = useState([]);\n  const handleOptionClick = (currentQuestion, option) => {\n    const isAnswerCorrect = option === currentQuestion.correctAnswer;\n    setAnsweredQuestions(prev => [...prev.filter(q => q.question !== currentQuestion.question), {\n      question: currentQuestion.question,\n      selectedOption: option,\n      isAnswerCorrect\n    }]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mcq-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mcq-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"mcq-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Test Your Knowledge\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Answer the following questions to challenge your skills!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mcq-container\",\n        children: questions.map((currentQuestion, questionIndex) => {\n          const answered = answeredQuestions.find(answer => answer.question === currentQuestion.question);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"question-text\",\n              children: currentQuestion.question\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"options-container\",\n              children: currentQuestion.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n                className: `option-btn ${(answered === null || answered === void 0 ? void 0 : answered.selectedOption) === option ? answered.isAnswerCorrect ? \"correct\" : \"incorrect\" : \"\"}`,\n                onClick: () => handleOptionClick(currentQuestion, option),\n                children: [String.fromCharCode(65 + index), \". \", option]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this), (answered === null || answered === void 0 ? void 0 : answered.selectedOption) && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: `feedback-message ${answered.isAnswerCorrect ? \"correct-feedback\" : \"incorrect-feedback\"}`,\n              children: answered.isAnswerCorrect ? \"Correct! 🎉\" : \"Oops! Try again. ❌\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 19\n            }, this)]\n          }, questionIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mcq-sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tips-tricks\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Tips & Tricks for GATE Preparation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: tipsAndTricks.map((tip, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: tip\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quick-formula-recap\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Quick Formula Recap\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: formulaRecap.map((formula, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: formula\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"highlight-mcq\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"MCQ of the Day\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: highlightMCQ.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: highlightMCQ.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [String.fromCharCode(65 + index), \". \", option]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Correct Answer: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 14\n          }, this), highlightMCQ.correctAnswer]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(MCQ, \"23mUxtQzA8VcPMbyWGVDvoQtf8U=\");\n_c = MCQ;\nexport default MCQ;\nvar _c;\n$RefreshReg$(_c, \"MCQ\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","MCQ","_s","questions","question","options","correctAnswer","tipsAndTricks","formulaRecap","highlightMCQ","answeredQuestions","setAnsweredQuestions","handleOptionClick","currentQuestion","option","isAnswerCorrect","prev","filter","q","selectedOption","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","questionIndex","answered","find","answer","index","onClick","String","fromCharCode","tip","formula","_c","$RefreshReg$"],"sources":["C:/project/src/mcq.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./mcq.css\";\r\n\r\nconst MCQ = () => {\r\n  const questions = [\r\n    {\r\n      question: \"1. An array A consists of n integers in locations A[0], A[1], ... A[n-1]. It is required to shift the elements of the array cyclically to the left by k places, where 1 ≤ k ≤ (n - 1). An incomplete algorithm for doing this in linear time, without using another array is given below. Complete the algorithm by filling in the blanks.\",\r\n      options: [\r\n        \"i > min; j != (n + i) mod n; A[j + k] = temp; i + 1;\",\r\n        \"i < min; j != (n + i - k) mod n; A[(j + k) mod n] = temp; i + 1;\", \r\n        \"i < min; j != (n + i + k) mod n; A[j + k] = temp; i + 1;\",\r\n        \"i > min; j != (n + i + k) mod n; A[(j + k) mod n] = temp; i + 1;\",\r\n      ],\r\n      correctAnswer:\r\n        \"i < min; j != (n + i - k) mod n; A[(j + k) mod n] = temp; i + 1;\",\r\n    },\r\n    {\r\n      question: \"2. What is the time complexity of binary search in a sorted array?\",\r\n      options: [\"O(n)\", \"O(log n)\", \"O(n^2)\", \"O(1)\"],\r\n      correctAnswer: \"O(log n)\",\r\n    },\r\n    // Additional questions...\r\n  ];\r\n\r\n  const tipsAndTricks = [\r\n    \"Revise key topics like Data Structures, Algorithms, and Mathematics daily.\",\r\n    \"Solve previous years' GATE question papers to get a sense of the exam pattern.\",\r\n    \"Time yourself while solving questions to improve speed and accuracy.\",\r\n  ];\r\n\r\n  const formulaRecap = [\r\n    \"Time Complexity of Binary Search: O(log n)\",\r\n    \"Cyclic Array Rotation Formula: New Index = (i + k) % n\",\r\n    \"Area of a Circle: πr²\",\r\n  ];\r\n\r\n  const highlightMCQ = {\r\n    question: \"What is the space complexity of DFS using an adjacency list?\",\r\n    options: [\"O(V)\", \"O(E)\", \"O(V + E)\", \"O(1)\"],\r\n    correctAnswer: \"O(V)\",\r\n  };\r\n\r\n  const [answeredQuestions, setAnsweredQuestions] = useState([]);\r\n\r\n  const handleOptionClick = (currentQuestion, option) => {\r\n    const isAnswerCorrect = option === currentQuestion.correctAnswer;\r\n    setAnsweredQuestions((prev) => [\r\n      ...prev.filter((q) => q.question !== currentQuestion.question),\r\n      { question: currentQuestion.question, selectedOption: option, isAnswerCorrect },\r\n    ]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"mcq-page\">\r\n      {/* Main Content */}\r\n      <div className=\"mcq-content\">\r\n        <header className=\"mcq-header\">\r\n          <h1>Test Your Knowledge</h1>\r\n          <p>Answer the following questions to challenge your skills!</p>\r\n        </header>\r\n\r\n        <div className=\"mcq-container\">\r\n          {questions.map((currentQuestion, questionIndex) => {\r\n            const answered = answeredQuestions.find(\r\n              (answer) => answer.question === currentQuestion.question\r\n            );\r\n\r\n            return (\r\n              <div key={questionIndex} className=\"question-card\">\r\n                <h3 className=\"question-text\">{currentQuestion.question}</h3>\r\n                <div className=\"options-container\">\r\n                  {currentQuestion.options.map((option, index) => (\r\n                    <button\r\n                      key={index}\r\n                      className={`option-btn ${\r\n                        answered?.selectedOption === option\r\n                          ? answered.isAnswerCorrect\r\n                            ? \"correct\"\r\n                            : \"incorrect\"\r\n                          : \"\"\r\n                      }`}\r\n                      onClick={() => handleOptionClick(currentQuestion, option)}\r\n                    >\r\n                      {String.fromCharCode(65 + index)}. {option}\r\n                    </button>\r\n                  ))}\r\n                </div>\r\n                {answered?.selectedOption && (\r\n                  <p\r\n                    className={`feedback-message ${\r\n                      answered.isAnswerCorrect ? \"correct-feedback\" : \"incorrect-feedback\"\r\n                    }`}\r\n                  >\r\n                    {answered.isAnswerCorrect ? \"Correct! 🎉\" : \"Oops! Try again. ❌\"}\r\n                  </p>\r\n                )}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Sidebar */}\r\n      <div className=\"mcq-sidebar\">\r\n        <div className=\"tips-tricks\">\r\n          <h3>Tips & Tricks for GATE Preparation</h3>\r\n          <ul>\r\n            {tipsAndTricks.map((tip, index) => (\r\n              <li key={index}>{tip}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n\r\n        <div className=\"quick-formula-recap\">\r\n          <h3>Quick Formula Recap</h3>\r\n          <ul>\r\n            {formulaRecap.map((formula, index) => (\r\n              <li key={index}>{formula}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n\r\n        <div className=\"highlight-mcq\">\r\n          <h3>MCQ of the Day</h3>\r\n          <p><strong>{highlightMCQ.question}</strong></p>\r\n          <ul>\r\n            {highlightMCQ.options.map((option, index) => (\r\n              <li key={index}>{String.fromCharCode(65 + index)}. {option}</li>\r\n            ))}\r\n          </ul>\r\n          <p><strong>Correct Answer: </strong>{highlightMCQ.correctAnswer}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MCQ;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}