{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\src\\\\mcq.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css'; // Reuse the existing styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MCQ() {\n  _s();\n  const questions = [{\n    question: \"What is the capital of France?\",\n    options: [\"Berlin\", \"Madrid\", \"Paris\", \"Rome\"],\n    correctAnswer: \"Paris\"\n  }, {\n    question: \"Which data structure uses LIFO (Last In First Out)?\",\n    options: [\"Queue\", \"Stack\", \"Linked List\", \"Tree\"],\n    correctAnswer: \"Stack\"\n  }, {\n    question: \"What does HTML stand for?\",\n    options: [\"Hyperlinks and Text Markup Language\", \"Hyper Text Markup Language\", \"Home Tool Markup Language\", \"Hyper Text Machine Language\"],\n    correctAnswer: \"Hyper Text Markup Language\"\n  }];\n  const [selectedOption, setSelectedOption] = useState({});\n  const [isAnswered, setIsAnswered] = useState(false);\n  const handleOptionClick = (questionIndex, option) => {\n    setSelectedOption({\n      ...selectedOption,\n      [questionIndex]: option\n    });\n    setIsAnswered(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mcq-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mcq-header\",\n      children: \"Multiple Choice Questions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mcq-question\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [index + 1, \". \", question.question]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mcq-options\",\n        children: question.options.map((option, optionIndex) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `mcq-option ${selectedOption[index] === option ? option === question.correctAnswer ? 'correct-answer' : 'wrong-answer' : ''}`,\n          onClick: () => handleOptionClick(index, option),\n          disabled: isAnswered,\n          children: option\n        }, optionIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), isAnswered && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mcq-feedback\",\n        children: selectedOption[index] === question.correctAnswer ? \"Correct!\" : `Wrong! The correct answer is: ${question.correctAnswer}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(MCQ, \"YQMWH5gpLDocNnqwbYAby0TOlrw=\");\n_c = MCQ;\nexport default MCQ;\nvar _c;\n$RefreshReg$(_c, \"MCQ\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","MCQ","_s","questions","question","options","correctAnswer","selectedOption","setSelectedOption","isAnswered","setIsAnswered","handleOptionClick","questionIndex","option","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","optionIndex","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/project/src/mcq.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './App.css'; // Reuse the existing styles\r\n\r\nfunction MCQ() {\r\n  const questions = [\r\n    {\r\n      question: \"What is the capital of France?\",\r\n      options: [\"Berlin\", \"Madrid\", \"Paris\", \"Rome\"],\r\n      correctAnswer: \"Paris\",\r\n    },\r\n    {\r\n      question: \"Which data structure uses LIFO (Last In First Out)?\",\r\n      options: [\"Queue\", \"Stack\", \"Linked List\", \"Tree\"],\r\n      correctAnswer: \"Stack\",\r\n    },\r\n    {\r\n      question: \"What does HTML stand for?\",\r\n      options: [\r\n        \"Hyperlinks and Text Markup Language\",\r\n        \"Hyper Text Markup Language\",\r\n        \"Home Tool Markup Language\",\r\n        \"Hyper Text Machine Language\",\r\n      ],\r\n      correctAnswer: \"Hyper Text Markup Language\",\r\n    },\r\n  ];\r\n\r\n  const [selectedOption, setSelectedOption] = useState({});\r\n  const [isAnswered, setIsAnswered] = useState(false);\r\n\r\n  const handleOptionClick = (questionIndex, option) => {\r\n    setSelectedOption({ ...selectedOption, [questionIndex]: option });\r\n    setIsAnswered(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"mcq-container\">\r\n      <h2 className=\"mcq-header\">Multiple Choice Questions</h2>\r\n      {questions.map((question, index) => (\r\n        <div key={index} className=\"mcq-question\">\r\n          <h3>{index + 1}. {question.question}</h3>\r\n          <div className=\"mcq-options\">\r\n            {question.options.map((option, optionIndex) => (\r\n              <button\r\n                key={optionIndex}\r\n                className={`mcq-option ${\r\n                  selectedOption[index] === option\r\n                    ? option === question.correctAnswer\r\n                      ? 'correct-answer'\r\n                      : 'wrong-answer'\r\n                    : ''\r\n                }`}\r\n                onClick={() => handleOptionClick(index, option)}\r\n                disabled={isAnswered}\r\n              >\r\n                {option}\r\n              </button>\r\n            ))}\r\n          </div>\r\n          {isAnswered && (\r\n            <p className=\"mcq-feedback\">\r\n              {selectedOption[index] === question.correctAnswer\r\n                ? \"Correct!\"\r\n                : `Wrong! The correct answer is: ${question.correctAnswer}`}\r\n            </p>\r\n          )}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MCQ;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}