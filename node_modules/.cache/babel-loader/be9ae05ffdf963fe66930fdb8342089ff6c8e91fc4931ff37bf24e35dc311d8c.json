{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\src\\\\mcq.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './mcq.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MCQ = () => {\n  _s();\n  const questions = [{\n    question: 'What does HTML stand for?',\n    options: ['HyperText Markup Language', 'HighText Machine Language', 'HyperText Machine Learning', 'None of the above'],\n    answer: 'HyperText Markup Language'\n  }];\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [showFeedback, setShowFeedback] = useState(false);\n  const handleOptionClick = option => {\n    setSelectedOption(option);\n    setShowFeedback(true);\n  };\n  const handleNextQuestion = () => {\n    setSelectedOption(null);\n    setShowFeedback(false);\n    setCurrentQuestion(prev => prev + 1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mcq-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"MCQ Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: questions[currentQuestion].question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"options-container\",\n        children: questions[currentQuestion].options.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `option-btn ${selectedOption === option ? 'selected' : ''}`,\n          onClick: () => handleOptionClick(option),\n          disabled: showFeedback // Disable buttons after selection\n          ,\n          children: option\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), showFeedback && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `feedback ${selectedOption === questions[currentQuestion].answer ? 'correct' : 'incorrect'}`,\n        children: selectedOption === questions[currentQuestion].answer ? 'Correct Answer!' : `Wrong Answer! The correct answer is: ${questions[currentQuestion].answer}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navigation-buttons\",\n      children: currentQuestion < questions.length - 1 ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNextQuestion,\n        disabled: !showFeedback,\n        children: \"Next Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"You have completed the quiz!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(MCQ, \"jYaaCkJk4ylOGNItXzTYoUY6CBQ=\");\n_c = MCQ;\nexport default MCQ;\nvar _c;\n$RefreshReg$(_c, \"MCQ\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","MCQ","_s","questions","question","options","answer","currentQuestion","setCurrentQuestion","selectedOption","setSelectedOption","showFeedback","setShowFeedback","handleOptionClick","option","handleNextQuestion","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onClick","disabled","length","_c","$RefreshReg$"],"sources":["C:/project/src/mcq.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './mcq.css';\r\n\r\nconst MCQ = () => {\r\n  const questions = [\r\n    \r\n    {\r\n      question: 'What does HTML stand for?',\r\n      options: [\r\n        'HyperText Markup Language',\r\n        'HighText Machine Language',\r\n        'HyperText Machine Learning',\r\n        'None of the above',\r\n      ],\r\n      answer: 'HyperText Markup Language',\r\n    },\r\n  ];\r\n\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [selectedOption, setSelectedOption] = useState(null);\r\n  const [showFeedback, setShowFeedback] = useState(false);\r\n\r\n  const handleOptionClick = (option) => {\r\n    setSelectedOption(option);\r\n    setShowFeedback(true);\r\n  };\r\n\r\n  const handleNextQuestion = () => {\r\n    setSelectedOption(null);\r\n    setShowFeedback(false);\r\n    setCurrentQuestion((prev) => prev + 1);\r\n  };\r\n\r\n  return (\r\n    <div className=\"mcq-container\">\r\n      <h1>MCQ Quiz</h1>\r\n      <div className=\"question-box\">\r\n        <h2>{questions[currentQuestion].question}</h2>\r\n        <div className=\"options-container\">\r\n          {questions[currentQuestion].options.map((option, index) => (\r\n            <button\r\n              key={index}\r\n              className={`option-btn ${selectedOption === option ? 'selected' : ''}`}\r\n              onClick={() => handleOptionClick(option)}\r\n              disabled={showFeedback} // Disable buttons after selection\r\n            >\r\n              {option}\r\n            </button>\r\n          ))}\r\n        </div>\r\n        {showFeedback && (\r\n          <div\r\n            className={`feedback ${\r\n              selectedOption === questions[currentQuestion].answer ? 'correct' : 'incorrect'\r\n            }`}\r\n          >\r\n            {selectedOption === questions[currentQuestion].answer\r\n              ? 'Correct Answer!'\r\n              : `Wrong Answer! The correct answer is: ${questions[currentQuestion].answer}`}\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className=\"navigation-buttons\">\r\n        {currentQuestion < questions.length - 1 ? (\r\n          <button onClick={handleNextQuestion} disabled={!showFeedback}>\r\n            Next Question\r\n          </button>\r\n        ) : (\r\n          <h3>You have completed the quiz!</h3>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MCQ;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}