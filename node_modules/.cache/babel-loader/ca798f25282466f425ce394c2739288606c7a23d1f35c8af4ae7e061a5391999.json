{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\src\\\\mcq.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./mcq.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MCQ = () => {\n  _s();\n  const questions = [{\n    question: \"1. An array A consists of n integers in locations A[0], A[1], ... A[n-1]. It is required to shift the elements of the array cyclically to the left by k places, where 1 ≤ k ≤ (n - 1). An incomplete algorithm for doing this in linear time, without using another array is given below. Complete the algorithm by filling in the blanks.\",\n    options: [\"i > min; j != (n + i) mod n; A[j + k] = temp; i + 1;\", \"i < min; j != (n + i - k) mod n; A[(j + k) mod n] = temp; i + 1;\",\n    // Correct\n    \"i < min; j != (n + i + k) mod n; A[j + k] = temp; i + 1;\", \"i > min; j != (n + i + k) mod n; A[(j + k) mod n] = temp; i + 1;\"],\n    correctAnswer: \"i < min; j != (n + i - k) mod n; A[(j + k) mod n] = temp; i + 1;\"\n  }, {\n    question: \"2. What is the time complexity of binary search in a sorted array?\",\n    options: [\"O(n)\", \"O(log n)\", \"O(n^2)\", \"O(1)\"],\n    correctAnswer: \"O(log n)\"\n  }\n  // Other questions...\n  ];\n  const [highlightedMCQ, setHighlightedMCQ] = useState(questions[0]);\n  const handleOptionClick = (currentQuestion, option) => {\n    // Option click logic\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar\",\n      id: \"navbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo\",\n        children: \"EaseAlgo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"nav-links\",\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#home\",\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"mcq-header\",\n      id: \"home\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Test Your Knowledge\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Answer the following questions to challenge your skills!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mcq-container\",\n        children: questions.map((currentQuestion, questionIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"question-text\",\n            children: currentQuestion.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"options-container\",\n            children: currentQuestion.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"option-btn\",\n              onClick: () => handleOptionClick(currentQuestion, option),\n              children: [String.fromCharCode(65 + index), \". \", option]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this)]\n        }, questionIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Tips and Tricks for GATE Preparation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Understand the GATE syllabus thoroughly.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Practice previous years' question papers.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Focus on time management during exams.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Quick Formula Recap\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Time Complexity: O(1), O(log n), O(n), etc.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Sorting Algorithms: T(n) = O(n log n)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Binary Search: Divide and conquer.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Highlight MCQ of the Day\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"highlight-mcq\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: highlightedMCQ.question\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 16\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(MCQ, \"+uVMLZ328yxXbmA2RuhdzIicSBQ=\");\n_c = MCQ;\nexport default MCQ;\nvar _c;\n$RefreshReg$(_c, \"MCQ\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","MCQ","_s","questions","question","options","correctAnswer","highlightedMCQ","setHighlightedMCQ","handleOptionClick","currentQuestion","option","children","className","id","fileName","_jsxFileName","lineNumber","columnNumber","href","map","questionIndex","index","onClick","String","fromCharCode","_c","$RefreshReg$"],"sources":["C:/project/src/mcq.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./mcq.css\";\r\n\r\nconst MCQ = () => {\r\n  const questions = [\r\n    {\r\n      question: \"1. An array A consists of n integers in locations A[0], A[1], ... A[n-1]. It is required to shift the elements of the array cyclically to the left by k places, where 1 ≤ k ≤ (n - 1). An incomplete algorithm for doing this in linear time, without using another array is given below. Complete the algorithm by filling in the blanks.\",\r\n      options: [\r\n        \"i > min; j != (n + i) mod n; A[j + k] = temp; i + 1;\",\r\n        \"i < min; j != (n + i - k) mod n; A[(j + k) mod n] = temp; i + 1;\", // Correct\r\n        \"i < min; j != (n + i + k) mod n; A[j + k] = temp; i + 1;\",\r\n        \"i > min; j != (n + i + k) mod n; A[(j + k) mod n] = temp; i + 1;\",\r\n      ],\r\n      correctAnswer:\r\n        \"i < min; j != (n + i - k) mod n; A[(j + k) mod n] = temp; i + 1;\",\r\n    },\r\n    {\r\n      question: \"2. What is the time complexity of binary search in a sorted array?\",\r\n      options: [\"O(n)\", \"O(log n)\", \"O(n^2)\", \"O(1)\"],\r\n      correctAnswer: \"O(log n)\",\r\n    },\r\n    // Other questions...\r\n  ];\r\n\r\n  const [highlightedMCQ, setHighlightedMCQ] = useState(questions[0]);\r\n\r\n  const handleOptionClick = (currentQuestion, option) => {\r\n    // Option click logic\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* Navbar */}\r\n      <nav className=\"navbar\" id=\"navbar\">\r\n        <div className=\"logo\">EaseAlgo</div>\r\n        <ul className=\"nav-links\">\r\n          <li>\r\n            <a href=\"#home\">Home</a>\r\n          </li>\r\n          {/* Other navbar links */}\r\n        </ul>\r\n      </nav>\r\n\r\n      {/* Header */}\r\n      <header className=\"mcq-header\" id=\"home\">\r\n        <h1>Test Your Knowledge</h1>\r\n        <p>Answer the following questions to challenge your skills!</p>\r\n      </header>\r\n\r\n      <div className=\"main-content\">\r\n        {/* MCQ Section */}\r\n        <div className=\"mcq-container\">\r\n          {questions.map((currentQuestion, questionIndex) => (\r\n            <div key={questionIndex} className=\"question-card\">\r\n              <h3 className=\"question-text\">{currentQuestion.question}</h3>\r\n              <div className=\"options-container\">\r\n                {currentQuestion.options.map((option, index) => (\r\n                  <button\r\n                    key={index}\r\n                    className=\"option-btn\"\r\n                    onClick={() => handleOptionClick(currentQuestion, option)}\r\n                  >\r\n                    {String.fromCharCode(65 + index)}. {option}\r\n                  </button>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        {/* Sidebar Section */}\r\n        <div className=\"sidebar\">\r\n          <h3>Tips and Tricks for GATE Preparation</h3>\r\n          <ul>\r\n            <li>Understand the GATE syllabus thoroughly.</li>\r\n            <li>Practice previous years' question papers.</li>\r\n            <li>Focus on time management during exams.</li>\r\n          </ul>\r\n\r\n          <h3>Quick Formula Recap</h3>\r\n          <ul>\r\n            <li>Time Complexity: O(1), O(log n), O(n), etc.</li>\r\n            <li>Sorting Algorithms: T(n) = O(n log n)</li>\r\n            <li>Binary Search: Divide and conquer.</li>\r\n          </ul>\r\n\r\n          <h3>Highlight MCQ of the Day</h3>\r\n          <div className=\"highlight-mcq\">\r\n            <p><strong>{highlightedMCQ.question}</strong></p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MCQ;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}